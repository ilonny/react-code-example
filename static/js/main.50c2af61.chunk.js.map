{"version":3,"sources":["components/lang-select/lang-select.js","contexts/i18n.js","dictionaries.js","decorators/i18n.js","components/header/header.js","components/loader/loader.js","store/selectors.js","components/staff/staff.js","components/staff-list/staff-list.js","store/actions.js","store/constants.js","components/routes/staff-list-page.js","components/staff-detail-card/staff-card.js","components/staff-detail-card/staff-detail-card.js","components/routes/staff-detail-page.js","components/app/app.js","store/reducer/staff.js","store/reducer/reviews.js","store/history.js","store/reducer/index.js","fixtures.js","store/index.js","store/middlewares/api.js","store/middlewares/generate-id.js","store/middlewares/logger.js","index.js"],"names":["LangSelect","_ref","currentLang","_ref$langs","langs","setLang","react_default","a","createElement","className","map","lang","es_button","onClick","type","key","createContext","Provider","Consumer","dictionaries","ru","staff list","not available","menu positions","hide reviews","show reviews","go to menu","show on map","name","rating","text","post review","cancel","add review","send order","thanks for your order","list","en","createTranslate","dictionary","i18n","OriginalComponent","props","Object","assign","t","menu","theme","mode","style","float","backgroundColor","Item","react_router_dom","to","activeStyle","color","lang_select_lang_select","Loader","textAlign","padding","spin","size","selectStaffs","state","staff","entities","selectStaffsLoaded","loaded","selectStaffsLoading","loading","selectStaff","createSelector","_","ownProps","id","staffs","find","Meta","Card","Staff","this","col","xs","sm","md","lg","card","hoverable","avatar","src","title","concat","surname","description","post","PureComponent","StaffList","renderStaff","staff_staff","fetchData","_this$props","staffsLoading","loader","Fragment","typography","Title","row","itemLayout","dataSource","renderItem","Component","connect","dispatch","callAPI","StaffListPage","staff_list","Typography","StaffDetailCard","role","justify","gutter","width","cover","alt","staff_card_Meta","fetchStaff","console","log","staff_card","parseInt","match","params","staff_detail_card_staff_detail_card","withRouter","App","_this","setState","value","layout","header_header","react_router","path","render","staff_list_page","staff_detail_page","from","exact","initialState","error","history","createBrowserHistory","window","ourHistory","combineReducers","router","connectRouter","staffState","arguments","length","undefined","action","LOAD_STAFF","objectSpread2","response","reviews","reviewsState","enhancer","composeWithDevTools","composeEnhancer","applyMiddleware","thunk","routerMiddleware","store","next","rest","objectWithoutProperties","setTimeout","generateId","generatedId","uuid","getState","createStore","reducer","ReactDOM","react_redux_es","esm","app_app","document","getElementById"],"mappings":"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","file":"static/js/main.50c2af61.chunk.js","sourcesContent":["import React from 'react'\nimport {Button} from 'antd'\nimport './lang-select.css'\n\nfunction LangSelect({currentLang, langs = ['en', 'ru'], setLang}) {\n  return (\n    <div className=\"lang-select\">\n      {langs.map(lang => (\n        <Button\n          onClick={() => setLang(lang)}\n          type={lang === currentLang ? 'ghost' : 'primary'}\n          className=\"button\"\n          key={lang}\n        >\n          {lang}\n        </Button>\n      ))}\n    </div>\n  )\n}\n\nexport default LangSelect\n","import {createContext} from 'react'\n\nexport const {Provider, Consumer} = createContext('en')\n","export const en = {\n  'staff list': 'Staff List',\n  'not available': 'Not available',\n  'menu positions': 'Menu positions',\n  'hide reviews': 'Hide reviews',\n  'show reviews': 'Show reviews',\n  'go to menu': 'Go to menu',\n  'show on map': 'Show on map',\n  name: 'Name',\n  rating: 'Rating',\n  text: 'Text',\n  'post review': 'Post review',\n  cancel: 'Cancel',\n  'add review': 'Add review',\n  'send order': 'Send order',\n  'thanks for your order': 'Thanks for your order',\n  list: 'List',\n  map: 'Map',\n}\n\nexport const ru = {\n  'staff list': 'Список сотрудников',\n  'not available': 'Недоступно',\n  'menu positions': 'Блюд',\n  'hide reviews': 'Спрятать отзывы',\n  'show reviews': 'Показать отзывы',\n  'go to menu': 'Перейти на карту',\n  'show on map': 'Показать на карте',\n  name: 'Имя',\n  rating: 'Оценка',\n  text: 'Текст',\n  'post review': 'Опубликовать отзыв',\n  cancel: 'Отменить',\n  'add review': 'Добавить отзыв',\n  'send order': 'Отправить заказ',\n  'thanks for your order': 'Спасибо за ваш заказ',\n  list: 'Список',\n  map: 'Карта',\n}\n\nexport default {ru, en}\n","import React from 'react'\nimport {Consumer} from '../contexts/i18n'\nimport dictionaries from '../dictionaries'\n\nconst i18n = OriginalComponent => props => {\n  return (\n    <Consumer>\n      {lang => (\n        <OriginalComponent {...props} t={createTranslate(dictionaries[lang])} />\n      )}\n    </Consumer>\n  )\n}\n\nexport const createTranslate = dictionary => text => dictionary[text] || text\n\nexport default i18n\n","import React from 'react'\nimport {NavLink} from 'react-router-dom'\nimport {Menu} from 'antd'\nimport LangSelect from '../lang-select'\nimport i18n from '../../decorators/i18n'\nimport './header.css'\n\nconst Header = ({lang, setLang, t}) => (\n  <header className=\"header\">\n    <Menu\n      className=\"menu\"\n      theme=\"dark\"\n      mode=\"horizontal\"\n      style={{float: 'left', backgroundColor: 'transparent'}}\n    >\n      <Menu.Item>\n        <NavLink to={'/staff-list'} activeStyle={{color: 'white'}}>\n          {t('staff list')}\n        </NavLink>\n      </Menu.Item>\n    </Menu>\n    <LangSelect currentLang={lang} setLang={setLang} />\n  </header>\n)\n\nexport default i18n(Header)\n","import React from 'react'\nimport {Spin} from 'antd'\n\nfunction Loader() {\n  return (\n    <div style={{textAlign: 'center', padding: '24px'}}>\n      <Spin size=\"large\" />\n    </div>\n  )\n}\n\nexport default Loader\n","import {createSelector} from 'reselect'\n\nexport const selectStaffs = state => state.staff.entities\nexport const selectStaffsLoaded = state => state.staff.loaded\nexport const selectStaffsLoading = state => state.staff.loading\n\nexport const selectId = (_, ownProps) => ownProps.id\n\nexport const selectStaff = createSelector(\n  selectStaffs,\n  selectId,\n  (staffs, id) => {\n    return staffs.find(staff => staff.id === id)\n  }\n)\n","import React, {PureComponent} from 'react'\nimport {Col, Card, Avatar} from 'antd'\nconst {Meta} = Card\nclass Staff extends PureComponent {\n  render() {\n    const {staff} = this.props\n    return (\n      <Col xs={24} sm={12} md={8} lg={6}>\n        <Card hoverable={true}>\n          <Meta\n            avatar={<Avatar src={staff.avatar} />}\n            title={`${staff.name} ${staff.surname}`}\n            description={staff.post}\n          />\n        </Card>\n      </Col>\n    )\n  }\n}\nexport default Staff\n","import React, {Component} from 'react'\nimport {List, Row, Typography} from 'antd'\nimport {Link} from 'react-router-dom'\nimport connect from 'react-redux/es/connect/connect'\nimport i18n from '../../decorators/i18n'\nimport Loader from '../loader'\nimport {\n  selectStaffs,\n  selectStaffsLoaded,\n  selectStaffsLoading,\n} from '../../store/selectors'\nimport {loadStaffs /*, loadReviews*/} from '../../store/actions'\nimport Staff from '../staff'\nclass StaffList extends Component {\n  componentDidMount() {\n    !this.props.loaded && this.props.fetchData()\n  }\n  renderStaff = staff => (\n    <Link to={`staff/${staff.id}`}>\n      <Staff key={staff.id} staff={staff} />\n    </Link>\n  )\n  render() {\n    const {staffs, staffsLoading, t} = this.props\n    return staffsLoading ? (\n      <Loader />\n    ) : (\n      <>\n        <Typography.Title style={{textAlign: 'center'}}>\n          {t('staff list')}\n        </Typography.Title>\n        <Row className=\"staff-list\">\n          <List\n            itemLayout={'horizontal'}\n            dataSource={staffs}\n            renderItem={this.renderStaff}\n          />\n        </Row>\n      </>\n    )\n  }\n}\n\nexport default connect(\n  state => ({\n    staffsLoading: selectStaffsLoading(state),\n    loaded: selectStaffsLoaded(state),\n    staffs: selectStaffs(state),\n  }),\n  dispatch => ({\n    fetchData: () => {\n      dispatch(loadStaffs())\n      //   dispatch(loadReviews())\n    },\n  })\n)(i18n(StaffList))\n","import {LOAD_STAFF} from './constants'\nimport // selectCart,\n// selectReviewsLoaded,\n// selectReviewsLoading,\n// selectUsersLoaded,\n// selectUsersLoading,\n'./selectors'\n// import {push} from 'connected-react-router'\n\nexport const loadStaffs = () => {\n  return {\n    type: LOAD_STAFF,\n    callAPI: '/api/staffs',\n  }\n}\n\nexport const loadStaff = () => {\n  return {\n    type: LOAD_STAFF,\n    callAPI: '/api/staff',\n  }\n}","export const START = '_START'\n\nexport const SUCCESS = '_SUCCESS'\n\nexport const FAIL = '_FAIL'\n\nexport const ADD_REVIEW = 'ADD_REVIEW'\n\nexport const LOAD_REVIEWS = 'LOAD_REVIEWS'\n\nexport const LOAD_STAFF = 'LOAD_STAFF'\n","import React, {Component} from 'react'\nimport StaffList from '../staff-list'\n\nclass StaffListPage extends Component {\n  render() {\n    return (\n      <div>\n        <StaffList />\n      </div>\n    )\n  }\n}\n\nexport default StaffListPage\n","import React, {Component} from 'react'\nimport {Typography, Card, Icon, Avatar, Row, Col} from 'antd'\nimport './staff-detail-card.css'\nconst {Title} = Typography\nconst {Meta} = Card\nclass StaffDetailCard extends Component {\n  render() {\n    const {staff} = this.props\n    return (\n      <main role=\"main\" className=\"staff-detail-wrapper\">\n        <Row type=\"flex\" justify=\"center\" gutter={[16, 16]}>\n          <Col>\n            <Card\n              style={{width: 300}}\n              cover={<img alt=\"example\" src={staff.avatar} />}\n            >\n              <Meta\n                title={`${staff.name} ${staff.surname}`}\n                description={staff.post}\n              />\n            </Card>\n          </Col>\n        </Row>\n      </main>\n    )\n  }\n}\n\nexport default StaffDetailCard\n","import React, {Component} from 'react'\nimport connect from 'react-redux/es/connect/connect'\nimport i18n from '../../decorators/i18n'\nimport {selectStaff, selectStaffsLoading} from '../../store/selectors'\nimport {loadStaff} from '../../store/actions'\nimport StaffCard from './staff-card'\nimport Loader from '../loader'\nclass StaffDetailCard extends Component {\n  componentDidMount() {\n    const {id, staff, fetchStaff} = this.props\n    !staff && fetchStaff(id)\n  }\n  render() {\n    console.log('staff props', this.props)\n    const {staff} = this.props\n    return staff ? <StaffCard staff={staff} /> : <Loader />\n  }\n}\nexport default connect(\n  (state, ownProps) => ({\n    staff: selectStaff(state, {id: parseInt(ownProps.id)}),\n    staffsLoading: selectStaffsLoading(state),\n  }),\n  (dispatch, ownProps) => ({\n    fetchStaff: () => {\n      dispatch(loadStaff(ownProps.id))\n    },\n  })\n)(i18n(StaffDetailCard))\n","import React, {Component} from 'react'\nimport {withRouter} from 'react-router-dom'\nimport StaffDetailCard from '../staff-detail-card'\n\nclass StaffListPage extends Component {\n  render() {\n    const id = this.props.match.params.id\n    return <StaffDetailCard id={id} />\n  }\n}\n\nexport default withRouter(StaffListPage)\n","import React, {Component} from 'react'\nimport {Layout} from 'antd'\nimport Header from '../header'\nimport {Redirect, Route, Switch} from 'react-router-dom'\nimport {Provider as I18nProvider} from '../../contexts/i18n'\nimport StaffListPage from '../routes/staff-list-page'\nimport StaffDetailPage from '../routes/staff-detail-page'\nimport './app.css'\n\nclass App extends Component {\n  state = {\n    lang: 'en',\n  }\n  setLang = lang => this.setState({lang})\n\n  render() {\n    const {lang} = this.state\n    return (\n      <I18nProvider value={lang}>\n        <Layout>\n          <Header lang={lang} setLang={this.setLang} />\n          <main role=\"main\">\n            <Switch>\n              <Route\n                path={'/staff-list'}\n                render={params => {\n                  return <StaffListPage />\n                }}\n              />\n              <Route\n                path={'/staff/:id'}\n                render={params => {\n                  return <StaffDetailPage />\n                }}\n              />\n              <Redirect from={'/'} exact to={'/staff-list'} />\n              <Route render={() => <h4>not found</h4>} />\n            </Switch>\n          </main>\n        </Layout>\n      </I18nProvider>\n    )\n  }\n}\n\nexport default App\n","import {LOAD_STAFF, START, SUCCESS} from '../constants'\n\nconst initialState = {\n  loaded: false,\n  loading: true,\n  error: null,\n  entities: [],\n}\n\nexport default (staffState = initialState, action) => {\n  switch (action.type) {\n    case LOAD_STAFF + START: {\n      return {\n        ...staffState,\n        loading: true,\n      }\n    }\n    case LOAD_STAFF + SUCCESS: {\n      return {\n        ...staffState,\n        loading: false,\n        loaded: true,\n        entities: action.response,\n      }\n    }\n    default:\n      return staffState\n  }\n}\n","// import {ADD_REVIEW, FAIL, LOAD_REVIEWS, START, SUCCESS} from '../constants'\nconst initialState = {\n  loaded: false,\n  loading: false,\n  error: null,\n  entities: {},\n}\n\nexport default (reviewsState = initialState, action) => {\n  switch (action.type) {\n    default:\n      return reviewsState\n  }\n}\n","import {createBrowserHistory} from 'history'\n\nconst history = createBrowserHistory()\n\n// not necessary\nwindow.ourHistory = history\n\nexport default history\n","import {combineReducers} from 'redux'\nimport {connectRouter} from 'connected-react-router'\nimport staff from './staff'\nimport reviews from './reviews'\nimport history from '../history'\n\nexport default combineReducers({\n  router: connectRouter(history),\n  staff,\n  reviews,\n})\n","const staffs = [\n  {\n    id: 1,\n    name: 'Ivan',\n    surname: 'Ivanov',\n    post: 'CTO',\n    avatar: 'https://eu.ui-avatars.com/api/?name=Ivan+Ivanov',\n  },\n  {\n    id: 2,\n    name: 'Dmitry',\n    surname: 'Gornak',\n    post: 'Frontend Developer',\n    avatar: 'https://eu.ui-avatars.com/api/?name=Dmitry+Gornak',\n  },\n  {\n    id: 3,\n    name: 'Janet',\n    surname: 'Peters',\n    post: 'UI/UX Designer',\n    avatar: 'https://eu.ui-avatars.com/api/?name=Janet+Peters',\n  },\n  {\n    id: 4,\n    name: 'Alexey',\n    surname: 'Smirnov',\n    post: 'Backend Developer',\n    avatar: 'https://eu.ui-avatars.com/api/?name=Alexey+Smirnov',\n  },\n  {\n    id: 5,\n    name: 'Alexander',\n    surname: 'Makarov',\n    post: 'Project Manager',\n    avatar: 'https://eu.ui-avatars.com/api/?name=Alexander+Makarov',\n  },\n]\n\nexport {staffs}\n","import {createStore, applyMiddleware} from 'redux'\nimport reducer from './reducer'\nimport logger from './middlewares/logger'\nimport generateId from './middlewares/generate-id'\nimport {composeWithDevTools} from 'redux-devtools-extension'\nimport api from './middlewares/api'\nimport thunk from 'redux-thunk'\nimport {routerMiddleware} from 'connected-react-router'\nimport history from './history'\n\nconst composeEnhancer = composeWithDevTools({})\nconst enhancer = composeEnhancer(\n  applyMiddleware(thunk, routerMiddleware(history), api, generateId, logger)\n)\n\nconst store = createStore(reducer, enhancer)\n\nwindow.store = store\n\nexport default store\n","import {START, SUCCESS} from '../constants'\nimport {staffs} from '../../fixtures'\nimport {LOAD_STAFF} from '../constants'\nexport default store => next => action => {\n  const {callAPI, ...rest} = action\n  if (!callAPI) {\n    next(rest)\n  } else {\n    next({\n      ...rest,\n      type: action.type + START,\n    })\n    //\n    // на случай, если бы у нас был api, можно исопльзовать код ниже для более реалистичного запроса\n    // в данном случае просто прочитаем заглушку с json файла.\n    let response\n    switch (action.type) {\n      case LOAD_STAFF:\n        response = staffs\n        break\n      default:\n        response = ''\n        break\n    }\n    setTimeout(() => {\n      next({\n        ...rest,\n        response,\n        type: action.type + SUCCESS,\n      })\n    }, 1000)\n    // fetch(callAPI)\n    //   .then(res => res.json())\n    //   .then(response => {\n    //     next({\n    //       ...rest,\n    //       response,\n    //       type: action.type + SUCCESS,\n    //     })\n    //   })\n    //   .catch(error => {\n    //     next({\n    //       ...rest,\n    //       error,\n    //       type: action.type + FAIL,\n    //     })\n    //     store.dispatch(replace('/error'))\n    //   })\n    //\n  }\n}\n","import uuid from 'uuid/v4'\n\nexport default store => next => action => {\n  const {generateId, ...rest} = action\n  if (!generateId) {\n    next(rest)\n  } else {\n    next({\n      ...rest,\n      generatedId: uuid(),\n    })\n  }\n}\n","export default store => next => action => {\n  console.log('before', store.getState())\n  console.log('action', action)\n  next(action)\n  console.log('after', store.getState())\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/app'\nimport store from './store'\nimport {Provider} from 'react-redux'\nimport {ConnectedRouter} from 'connected-react-router'\nimport history from './store/history'\nimport './index.css'\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <App />\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}